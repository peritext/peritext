{
  "type": "Program",
  "start": 0,
  "end": 5003,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 146,
      "column": 0
    }
  },
  "sourceType": "module",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "start": 3898,
      "end": 4096,
      "loc": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 2
        }
      },
      "declaration": {
        "type": "VariableDeclaration",
        "start": 3905,
        "end": 4096,
        "loc": {
          "start": {
            "line": 111,
            "column": 7
          },
          "end": {
            "line": 116,
            "column": 2
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 3911,
            "end": 4095,
            "loc": {
              "start": {
                "line": 111,
                "column": 13
              },
              "end": {
                "line": 116,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 3911,
              "end": 3929,
              "loc": {
                "start": {
                  "line": 111,
                  "column": 13
                },
                "end": {
                  "line": 111,
                  "column": 31
                }
              },
              "name": "metaStringToCouple",
              "leadingComments": null
            },
            "init": {
              "type": "ArrowFunctionExpression",
              "start": 3932,
              "end": 4095,
              "loc": {
                "start": {
                  "line": 111,
                  "column": 34
                },
                "end": {
                  "line": 116,
                  "column": 1
                }
              },
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 3933,
                  "end": 3936,
                  "loc": {
                    "start": {
                      "line": 111,
                      "column": 35
                    },
                    "end": {
                      "line": 111,
                      "column": 38
                    }
                  },
                  "name": "str"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 3940,
                "end": 4095,
                "loc": {
                  "start": {
                    "line": 111,
                    "column": 42
                  },
                  "end": {
                    "line": 116,
                    "column": 1
                  }
                },
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "start": 3944,
                    "end": 3973,
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 2
                      },
                      "end": {
                        "line": 112,
                        "column": 31
                      }
                    },
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 3950,
                        "end": 3972,
                        "loc": {
                          "start": {
                            "line": 112,
                            "column": 8
                          },
                          "end": {
                            "line": 112,
                            "column": 30
                          }
                        },
                        "id": {
                          "type": "Identifier",
                          "start": 3950,
                          "end": 3955,
                          "loc": {
                            "start": {
                              "line": 112,
                              "column": 8
                            },
                            "end": {
                              "line": 112,
                              "column": 13
                            }
                          },
                          "name": "parts"
                        },
                        "init": {
                          "type": "CallExpression",
                          "start": 3958,
                          "end": 3972,
                          "loc": {
                            "start": {
                              "line": 112,
                              "column": 16
                            },
                            "end": {
                              "line": 112,
                              "column": 30
                            }
                          },
                          "callee": {
                            "type": "MemberExpression",
                            "start": 3958,
                            "end": 3967,
                            "loc": {
                              "start": {
                                "line": 112,
                                "column": 16
                              },
                              "end": {
                                "line": 112,
                                "column": 25
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 3958,
                              "end": 3961,
                              "loc": {
                                "start": {
                                  "line": 112,
                                  "column": 16
                                },
                                "end": {
                                  "line": 112,
                                  "column": 19
                                }
                              },
                              "name": "str"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 3962,
                              "end": 3967,
                              "loc": {
                                "start": {
                                  "line": 112,
                                  "column": 20
                                },
                                "end": {
                                  "line": 112,
                                  "column": 25
                                }
                              },
                              "name": "split"
                            },
                            "computed": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 3968,
                              "end": 3971,
                              "loc": {
                                "start": {
                                  "line": 112,
                                  "column": 26
                                },
                                "end": {
                                  "line": 112,
                                  "column": 29
                                }
                              },
                              "value": "_",
                              "rawValue": "_",
                              "raw": "'_'"
                            }
                          ]
                        }
                      }
                    ],
                    "kind": "const"
                  },
                  {
                    "type": "VariableDeclaration",
                    "start": 3976,
                    "end": 4038,
                    "loc": {
                      "start": {
                        "line": 113,
                        "column": 2
                      },
                      "end": {
                        "line": 113,
                        "column": 64
                      }
                    },
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 3982,
                        "end": 4037,
                        "loc": {
                          "start": {
                            "line": 113,
                            "column": 8
                          },
                          "end": {
                            "line": 113,
                            "column": 63
                          }
                        },
                        "id": {
                          "type": "Identifier",
                          "start": 3982,
                          "end": 3988,
                          "loc": {
                            "start": {
                              "line": 113,
                              "column": 8
                            },
                            "end": {
                              "line": 113,
                              "column": 14
                            }
                          },
                          "name": "domain"
                        },
                        "init": {
                          "type": "ConditionalExpression",
                          "start": 3991,
                          "end": 4037,
                          "loc": {
                            "start": {
                              "line": 113,
                              "column": 17
                            },
                            "end": {
                              "line": 113,
                              "column": 63
                            }
                          },
                          "test": {
                            "type": "BinaryExpression",
                            "start": 3992,
                            "end": 4008,
                            "loc": {
                              "start": {
                                "line": 113,
                                "column": 18
                              },
                              "end": {
                                "line": 113,
                                "column": 34
                              }
                            },
                            "left": {
                              "type": "MemberExpression",
                              "start": 3992,
                              "end": 4004,
                              "loc": {
                                "start": {
                                  "line": 113,
                                  "column": 18
                                },
                                "end": {
                                  "line": 113,
                                  "column": 30
                                }
                              },
                              "object": {
                                "type": "Identifier",
                                "start": 3992,
                                "end": 3997,
                                "loc": {
                                  "start": {
                                    "line": 113,
                                    "column": 18
                                  },
                                  "end": {
                                    "line": 113,
                                    "column": 23
                                  }
                                },
                                "name": "parts"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 3998,
                                "end": 4004,
                                "loc": {
                                  "start": {
                                    "line": 113,
                                    "column": 24
                                  },
                                  "end": {
                                    "line": 113,
                                    "column": 30
                                  }
                                },
                                "name": "length"
                              },
                              "computed": false
                            },
                            "operator": ">",
                            "right": {
                              "type": "Literal",
                              "start": 4007,
                              "end": 4008,
                              "loc": {
                                "start": {
                                  "line": 113,
                                  "column": 33
                                },
                                "end": {
                                  "line": 113,
                                  "column": 34
                                }
                              },
                              "value": 1,
                              "rawValue": 1,
                              "raw": "1"
                            },
                            "parenthesizedExpression": true
                          },
                          "consequent": {
                            "type": "CallExpression",
                            "start": 4012,
                            "end": 4025,
                            "loc": {
                              "start": {
                                "line": 113,
                                "column": 38
                              },
                              "end": {
                                "line": 113,
                                "column": 51
                              }
                            },
                            "callee": {
                              "type": "MemberExpression",
                              "start": 4012,
                              "end": 4023,
                              "loc": {
                                "start": {
                                  "line": 113,
                                  "column": 38
                                },
                                "end": {
                                  "line": 113,
                                  "column": 49
                                }
                              },
                              "object": {
                                "type": "Identifier",
                                "start": 4012,
                                "end": 4017,
                                "loc": {
                                  "start": {
                                    "line": 113,
                                    "column": 38
                                  },
                                  "end": {
                                    "line": 113,
                                    "column": 43
                                  }
                                },
                                "name": "parts"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 4018,
                                "end": 4023,
                                "loc": {
                                  "start": {
                                    "line": 113,
                                    "column": 44
                                  },
                                  "end": {
                                    "line": 113,
                                    "column": 49
                                  }
                                },
                                "name": "shift"
                              },
                              "computed": false
                            },
                            "arguments": []
                          },
                          "alternate": {
                            "type": "Literal",
                            "start": 4028,
                            "end": 4037,
                            "loc": {
                              "start": {
                                "line": 113,
                                "column": 54
                              },
                              "end": {
                                "line": 113,
                                "column": 63
                              }
                            },
                            "value": "general",
                            "rawValue": "general",
                            "raw": "'general'"
                          }
                        }
                      }
                    ],
                    "kind": "const"
                  },
                  {
                    "type": "VariableDeclaration",
                    "start": 4041,
                    "end": 4069,
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 2
                      },
                      "end": {
                        "line": 114,
                        "column": 30
                      }
                    },
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 4047,
                        "end": 4068,
                        "loc": {
                          "start": {
                            "line": 114,
                            "column": 8
                          },
                          "end": {
                            "line": 114,
                            "column": 29
                          }
                        },
                        "id": {
                          "type": "Identifier",
                          "start": 4047,
                          "end": 4050,
                          "loc": {
                            "start": {
                              "line": 114,
                              "column": 8
                            },
                            "end": {
                              "line": 114,
                              "column": 11
                            }
                          },
                          "name": "key"
                        },
                        "init": {
                          "type": "CallExpression",
                          "start": 4053,
                          "end": 4068,
                          "loc": {
                            "start": {
                              "line": 114,
                              "column": 14
                            },
                            "end": {
                              "line": 114,
                              "column": 29
                            }
                          },
                          "callee": {
                            "type": "MemberExpression",
                            "start": 4053,
                            "end": 4063,
                            "loc": {
                              "start": {
                                "line": 114,
                                "column": 14
                              },
                              "end": {
                                "line": 114,
                                "column": 24
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 4053,
                              "end": 4058,
                              "loc": {
                                "start": {
                                  "line": 114,
                                  "column": 14
                                },
                                "end": {
                                  "line": 114,
                                  "column": 19
                                }
                              },
                              "name": "parts"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 4059,
                              "end": 4063,
                              "loc": {
                                "start": {
                                  "line": 114,
                                  "column": 20
                                },
                                "end": {
                                  "line": 114,
                                  "column": 24
                                }
                              },
                              "name": "join"
                            },
                            "computed": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 4064,
                              "end": 4067,
                              "loc": {
                                "start": {
                                  "line": 114,
                                  "column": 25
                                },
                                "end": {
                                  "line": 114,
                                  "column": 28
                                }
                              },
                              "value": "_",
                              "rawValue": "_",
                              "raw": "'_'"
                            }
                          ]
                        }
                      }
                    ],
                    "kind": "const"
                  },
                  {
                    "type": "ReturnStatement",
                    "start": 4072,
                    "end": 4093,
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 2
                      },
                      "end": {
                        "line": 115,
                        "column": 23
                      }
                    },
                    "argument": {
                      "type": "ObjectExpression",
                      "start": 4079,
                      "end": 4092,
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 9
                        },
                        "end": {
                          "line": 115,
                          "column": 22
                        }
                      },
                      "properties": [
                        {
                          "type": "Property",
                          "start": 4080,
                          "end": 4086,
                          "loc": {
                            "start": {
                              "line": 115,
                              "column": 10
                            },
                            "end": {
                              "line": 115,
                              "column": 16
                            }
                          },
                          "method": false,
                          "shorthand": true,
                          "computed": false,
                          "key": {
                            "type": "Identifier",
                            "start": 4080,
                            "end": 4086,
                            "loc": {
                              "start": {
                                "line": 115,
                                "column": 10
                              },
                              "end": {
                                "line": 115,
                                "column": 16
                              }
                            },
                            "name": "domain"
                          },
                          "kind": "init",
                          "value": {
                            "type": "Identifier",
                            "start": 4080,
                            "end": 4086,
                            "loc": {
                              "start": {
                                "line": 115,
                                "column": 10
                              },
                              "end": {
                                "line": 115,
                                "column": 16
                              }
                            },
                            "name": "domain"
                          }
                        },
                        {
                          "type": "Property",
                          "start": 4088,
                          "end": 4091,
                          "loc": {
                            "start": {
                              "line": 115,
                              "column": 18
                            },
                            "end": {
                              "line": 115,
                              "column": 21
                            }
                          },
                          "method": false,
                          "shorthand": true,
                          "computed": false,
                          "key": {
                            "type": "Identifier",
                            "start": 4088,
                            "end": 4091,
                            "loc": {
                              "start": {
                                "line": 115,
                                "column": 18
                              },
                              "end": {
                                "line": 115,
                                "column": 21
                              }
                            },
                            "name": "key"
                          },
                          "kind": "init",
                          "value": {
                            "type": "Identifier",
                            "start": 4088,
                            "end": 4091,
                            "loc": {
                              "start": {
                                "line": 115,
                                "column": 18
                              },
                              "end": {
                                "line": 115,
                                "column": 21
                              }
                            },
                            "name": "key"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "leadingComments": null
          }
        ],
        "kind": "const",
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Utils - section metadata & resources utils : access, filter, deletion, ...\n * @module utils/sectionUtils\n ",
            "start": 0,
            "end": 115,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 3
              }
            },
            "range": [
              0,
              115
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Gets a value in metadata props array by its domain and key\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {string} value - the value\n ",
            "start": 117,
            "end": 464,
            "loc": {
              "start": {
                "line": 6,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            },
            "range": [
              117,
              464
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const getMetaValue = (metaList, domain, key) =>{\n  const prop = metaList.find((meta) =>{\n    return meta.domain === domain && meta.key === key;\n  });\n  if (prop) {\n    return prop.value;\n  }\n  return undefined;\n};\n",
            "start": 466,
            "end": 692,
            "loc": {
              "start": {
                "line": 13,
                "column": 1
              },
              "end": {
                "line": 23,
                "column": 2
              }
            },
            "range": [
              466,
              692
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Sets a value in metadata props array after localized it by its domain and key\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @param {string} newValue - the new value to assign to the prop\n * @return {array} newlist - the updated list\n ",
            "start": 694,
            "end": 1134,
            "loc": {
              "start": {
                "line": 25,
                "column": 0
              },
              "end": {
                "line": 32,
                "column": 3
              }
            },
            "range": [
              694,
              1134
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const setMetaValue = (metaList, domain, key, newValue) =>{\n  const newMetaList = metaList.map((meta) =>{\n    if (meta.domain === domain && meta.key === key) {\n      meta.value = newValue;\n    }\n    return meta;\n  });\n  return newMetaList;\n};\n",
            "start": 1135,
            "end": 1389,
            "loc": {
              "start": {
                "line": 33,
                "column": 0
              },
              "end": {
                "line": 43,
                "column": 2
              }
            },
            "range": [
              1135,
              1389
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Checks if the value has a metadata property\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {boolean} hasMeta - whether the prop is there\n ",
            "start": 1391,
            "end": 1742,
            "loc": {
              "start": {
                "line": 45,
                "column": 0
              },
              "end": {
                "line": 51,
                "column": 3
              }
            },
            "range": [
              1391,
              1742
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const hasMeta = (metaList, domain, key) =>{\n  if (typeof domain === 'string') {\n    return getMetaValue(metaList, domain, key) !== undefined;\n  }else if (domain.domain) {\n    return getMetaValue(metaList, domain.domain, domain.key) !== undefined;\n  }\n  throw new Error('error in couple ' + domain + '_' + key + ': hasMeta method needs either a domain+key pair or a metadata prop object');\n};\n",
            "start": 1743,
            "end": 2147,
            "loc": {
              "start": {
                "line": 52,
                "column": 0
              },
              "end": {
                "line": 61,
                "column": 2
              }
            },
            "range": [
              1743,
              2147
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Finds a specific section in a sections list through one of its metadata\n * @param {array} sections - the sections array to search in\n * @param {string} domain - the domain of the prop used to search the section, stored in its \"domain\" prop\n * @param {string} key - the key of the prop used to search the section, stored in its \"key\" prop\n * @return {Object} section - the resulting section\n ",
            "start": 2149,
            "end": 2549,
            "loc": {
              "start": {
                "line": 63,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            },
            "range": [
              2149,
              2549
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const findByMetadata = (sections, domain, key, value) =>{\n  return sections.find((section) =>{\n    const meta = getMetaValue(section.metadata, domain, key);\n    return meta === value;\n  });\n};\n",
            "start": 2550,
            "end": 2755,
            "loc": {
              "start": {
                "line": 70,
                "column": 0
              },
              "end": {
                "line": 77,
                "column": 2
              }
            },
            "range": [
              2550,
              2755
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Checks if two metadata props have the same scope (domain and key)\n * @param {Object} meta1 - the first metadata prop\n * @param {Object} meta1 - the second metadata prop\n * @return {boolean} sameScope - whether the two props have the same scope\n ",
            "start": 2757,
            "end": 3011,
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 84,
                "column": 3
              }
            },
            "range": [
              2757,
              3011
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const sameMetaScope = (meta1, meta2) =>{\n  return meta1.domain === meta2.domain && meta1.key === meta2.key;\n};\n",
            "start": 3013,
            "end": 3136,
            "loc": {
              "start": {
                "line": 85,
                "column": 1
              },
              "end": {
                "line": 89,
                "column": 2
              }
            },
            "range": [
              3013,
              3136
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Delete a specific metadata prop\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {array} updatedMetaList - the new metadata list, without the deleted prop\n ",
            "start": 3138,
            "end": 3505,
            "loc": {
              "start": {
                "line": 91,
                "column": 0
              },
              "end": {
                "line": 97,
                "column": 3
              }
            },
            "range": [
              3138,
              3505
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const deleteMeta = (metaList, domain, key) =>{\n  return metaList.filter((meta)=>{\n    return !(domain === meta.domain && key === meta.key);\n  });\n};\n",
            "start": 3507,
            "end": 3668,
            "loc": {
              "start": {
                "line": 98,
                "column": 1
              },
              "end": {
                "line": 104,
                "column": 2
              }
            },
            "range": [
              3507,
              3668
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Converts a bibtex metadata expression (e.g. \"title\", \"twitter_twitter\") to an object prop\n * @param {string} str - the bibtex metadata expression\n * @return {Object} metadata - the metadata prop object, without value\n ",
            "start": 3670,
            "end": 3897,
            "loc": {
              "start": {
                "line": 106,
                "column": 0
              },
              "end": {
                "line": 110,
                "column": 3
              }
            },
            "range": [
              3670,
              3897
            ]
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Checks if a resource list contains a resource, by id\n * @param {array} resourcesList - the resources list in which looking for\n * @param {Object} resource - the resource to look for\n * @return {boolean} hasResource - whether resource is present in the list\n ",
            "start": 4098,
            "end": 4365,
            "loc": {
              "start": {
                "line": 118,
                "column": 0
              },
              "end": {
                "line": 123,
                "column": 3
              }
            },
            "range": [
              4098,
              4365
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const hasResource = (resourcesList, resource) =>{\n  return resourcesList.find((res) =>{\n    return resource.id === res.id;\n  }) !== undefined;\n};\n",
            "start": 4367,
            "end": 4525,
            "loc": {
              "start": {
                "line": 124,
                "column": 1
              },
              "end": {
                "line": 130,
                "column": 2
              }
            },
            "range": [
              4367,
              4525
            ]
          },
          {
            "type": "Block",
            "value": "*\n * Filter resources that have a specific value\n * @param {array} resourcesList - the list of resource sto filter\n * @param {string} key - the key by which filtering the resources\n * @param {string} value - the value by which filtering the resources\n * @return {array} updatedResourceList - the filtered resources list\n ",
            "start": 4527,
            "end": 4852,
            "loc": {
              "start": {
                "line": 132,
                "column": 0
              },
              "end": {
                "line": 138,
                "column": 3
              }
            },
            "range": [
              4527,
              4852
            ]
          },
          {
            "type": "Block",
            "value": "\nexport const filterResources = (resourcesList, key, value) =>{\n  return resourcesList.filter((res) =>{\n    return res[key] === value;\n  });\n};\n",
            "start": 4854,
            "end": 5002,
            "loc": {
              "start": {
                "line": 139,
                "column": 1
              },
              "end": {
                "line": 145,
                "column": 2
              }
            },
            "range": [
              4854,
              5002
            ]
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Utils - section metadata & resources utils : access, filter, deletion, ...\n * @module utils/sectionUtils\n ",
          "start": 0,
          "end": 115,
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 3
            }
          },
          "range": [
            0,
            115
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Gets a value in metadata props array by its domain and key\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {string} value - the value\n ",
          "start": 117,
          "end": 464,
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          },
          "range": [
            117,
            464
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const getMetaValue = (metaList, domain, key) =>{\n  const prop = metaList.find((meta) =>{\n    return meta.domain === domain && meta.key === key;\n  });\n  if (prop) {\n    return prop.value;\n  }\n  return undefined;\n};\n",
          "start": 466,
          "end": 692,
          "loc": {
            "start": {
              "line": 13,
              "column": 1
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "range": [
            466,
            692
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Sets a value in metadata props array after localized it by its domain and key\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @param {string} newValue - the new value to assign to the prop\n * @return {array} newlist - the updated list\n ",
          "start": 694,
          "end": 1134,
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "range": [
            694,
            1134
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const setMetaValue = (metaList, domain, key, newValue) =>{\n  const newMetaList = metaList.map((meta) =>{\n    if (meta.domain === domain && meta.key === key) {\n      meta.value = newValue;\n    }\n    return meta;\n  });\n  return newMetaList;\n};\n",
          "start": 1135,
          "end": 1389,
          "loc": {
            "start": {
              "line": 33,
              "column": 0
            },
            "end": {
              "line": 43,
              "column": 2
            }
          },
          "range": [
            1135,
            1389
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Checks if the value has a metadata property\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {boolean} hasMeta - whether the prop is there\n ",
          "start": 1391,
          "end": 1742,
          "loc": {
            "start": {
              "line": 45,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "range": [
            1391,
            1742
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const hasMeta = (metaList, domain, key) =>{\n  if (typeof domain === 'string') {\n    return getMetaValue(metaList, domain, key) !== undefined;\n  }else if (domain.domain) {\n    return getMetaValue(metaList, domain.domain, domain.key) !== undefined;\n  }\n  throw new Error('error in couple ' + domain + '_' + key + ': hasMeta method needs either a domain+key pair or a metadata prop object');\n};\n",
          "start": 1743,
          "end": 2147,
          "loc": {
            "start": {
              "line": 52,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 2
            }
          },
          "range": [
            1743,
            2147
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Finds a specific section in a sections list through one of its metadata\n * @param {array} sections - the sections array to search in\n * @param {string} domain - the domain of the prop used to search the section, stored in its \"domain\" prop\n * @param {string} key - the key of the prop used to search the section, stored in its \"key\" prop\n * @return {Object} section - the resulting section\n ",
          "start": 2149,
          "end": 2549,
          "loc": {
            "start": {
              "line": 63,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "range": [
            2149,
            2549
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const findByMetadata = (sections, domain, key, value) =>{\n  return sections.find((section) =>{\n    const meta = getMetaValue(section.metadata, domain, key);\n    return meta === value;\n  });\n};\n",
          "start": 2550,
          "end": 2755,
          "loc": {
            "start": {
              "line": 70,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 2
            }
          },
          "range": [
            2550,
            2755
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Checks if two metadata props have the same scope (domain and key)\n * @param {Object} meta1 - the first metadata prop\n * @param {Object} meta1 - the second metadata prop\n * @return {boolean} sameScope - whether the two props have the same scope\n ",
          "start": 2757,
          "end": 3011,
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "range": [
            2757,
            3011
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const sameMetaScope = (meta1, meta2) =>{\n  return meta1.domain === meta2.domain && meta1.key === meta2.key;\n};\n",
          "start": 3013,
          "end": 3136,
          "loc": {
            "start": {
              "line": 85,
              "column": 1
            },
            "end": {
              "line": 89,
              "column": 2
            }
          },
          "range": [
            3013,
            3136
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Delete a specific metadata prop\n * @param {array} metaList - the list of metadata objects in which looking for the value\n * @param {string} domain - the domain of the prop, stored in its \"domain\" prop\n * @param {string} key - the key of the prop, stored in its \"key\" prop\n * @return {array} updatedMetaList - the new metadata list, without the deleted prop\n ",
          "start": 3138,
          "end": 3505,
          "loc": {
            "start": {
              "line": 91,
              "column": 0
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "range": [
            3138,
            3505
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const deleteMeta = (metaList, domain, key) =>{\n  return metaList.filter((meta)=>{\n    return !(domain === meta.domain && key === meta.key);\n  });\n};\n",
          "start": 3507,
          "end": 3668,
          "loc": {
            "start": {
              "line": 98,
              "column": 1
            },
            "end": {
              "line": 104,
              "column": 2
            }
          },
          "range": [
            3507,
            3668
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Converts a bibtex metadata expression (e.g. \"title\", \"twitter_twitter\") to an object prop\n * @param {string} str - the bibtex metadata expression\n * @return {Object} metadata - the metadata prop object, without value\n ",
          "start": 3670,
          "end": 3897,
          "loc": {
            "start": {
              "line": 106,
              "column": 0
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "range": [
            3670,
            3897
          ]
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Checks if a resource list contains a resource, by id\n * @param {array} resourcesList - the resources list in which looking for\n * @param {Object} resource - the resource to look for\n * @return {boolean} hasResource - whether resource is present in the list\n ",
          "start": 4098,
          "end": 4365,
          "loc": {
            "start": {
              "line": 118,
              "column": 0
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "range": [
            4098,
            4365
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const hasResource = (resourcesList, resource) =>{\n  return resourcesList.find((res) =>{\n    return resource.id === res.id;\n  }) !== undefined;\n};\n",
          "start": 4367,
          "end": 4525,
          "loc": {
            "start": {
              "line": 124,
              "column": 1
            },
            "end": {
              "line": 130,
              "column": 2
            }
          },
          "range": [
            4367,
            4525
          ]
        },
        {
          "type": "Block",
          "value": "*\n * Filter resources that have a specific value\n * @param {array} resourcesList - the list of resource sto filter\n * @param {string} key - the key by which filtering the resources\n * @param {string} value - the value by which filtering the resources\n * @return {array} updatedResourceList - the filtered resources list\n ",
          "start": 4527,
          "end": 4852,
          "loc": {
            "start": {
              "line": 132,
              "column": 0
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "range": [
            4527,
            4852
          ]
        },
        {
          "type": "Block",
          "value": "\nexport const filterResources = (resourcesList, key, value) =>{\n  return resourcesList.filter((res) =>{\n    return res[key] === value;\n  });\n};\n",
          "start": 4854,
          "end": 5002,
          "loc": {
            "start": {
              "line": 139,
              "column": 1
            },
            "end": {
              "line": 145,
              "column": 2
            }
          },
          "range": [
            4854,
            5002
          ]
        }
      ]
    }
  ]
}